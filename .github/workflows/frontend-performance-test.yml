name: Frontend Performance & Fluency Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'src/**'
      - 'package.json'
      - 'yarn.lock'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'src/**'
      - 'package.json'
      - 'yarn.lock'
  schedule:
    # 每天凌晨2点运行性能测试
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_type:
        description: '测试类型'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - performance
          - interaction
          - memory
          - accessibility

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.node-version.outputs.version }}
    steps:
      - name: Get Node.js version
        id: node-version
        run: echo "version=$(node -v | cut -d'v' -f2)" >> $GITHUB_OUTPUT

  performance-test:
    name: Performance & Fluency Tests
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        app: [web, desktop, ext]
        node-version: [20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Setup Yarn
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: |
          if [ "${{ matrix.app }}" = "web" ]; then
            yarn app:web:build
          elif [ "${{ matrix.app }}" = "ext" ]; then
            yarn app:ext:build
          elif [ "${{ matrix.app }}" = "desktop" ]; then
            yarn workspace @onekeyhq/desktop build
          fi

      - name: Start application server
        run: |
          if [ "${{ matrix.app }}" = "web" ]; then
            yarn app:web:build
            npx serve -s apps/web/web-build -l 3000 &
          elif [ "${{ matrix.app }}" = "ext" ]; then
            yarn app:ext:build
            npx serve -s apps/ext/dist -l 3000 &
          else
            echo "Desktop app testing requires different setup"
            exit 0
          fi
        env:
          CI: true

      - name: Wait for server to start
        run: |
          timeout 30 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 1; done'

      - name: Install Puppeteer dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgbm-dev \
            libxss1 \
            libnss3 \
            libatk-bridge2.0-0 \
            libgtk-3-0 \
            libxshmfence1

      - name: Run Performance Tests
        run: |
          yarn test:performance:ci
        env:
          CI: true
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

      - name: Run Interaction Tests
        run: |
          yarn test:interaction
        env:
          CI: true

      - name: Run Memory Usage Tests
        run: |
          node scripts/memory-test.js http://localhost:3000
        env:
          CI: true

      - name: Upload Performance Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-reports-${{ matrix.app }}
          path: |
            performance-reports/
            test-results/
          retention-days: 30

      - name: Generate Performance Summary
        run: |
          node scripts/generate-performance-summary.js
        env:
          CI: true

  lighthouse-test:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ needs.setup.outputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build web application
        run: yarn app:web:build

      - name: Start web server
        run: |
          npx serve -s apps/web/web-build -l 3000 &
          sleep 10

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './lighthouserc.json'

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ needs.setup.outputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Analyze bundle size
        run: |
          yarn workspace @onekeyhq/web build --analyze
          yarn workspace @onekeyhq/ext build:v3 --analyze

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: |
            apps/web/web-build/
            apps/ext/dist/
          retention-days: 30

  accessibility-test:
    name: Accessibility & Usability Tests
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ needs.setup.outputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build web application
        run: yarn app:web:build

      - name: Start web server
        run: |
          npx serve -s apps/web/web-build -l 3000 &
          sleep 10

      - name: Run Accessibility Tests
        run: |
          yarn test:accessibility
        env:
          CI: true

      - name: Upload accessibility reports
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-reports
          path: test-results/accessibility/
          retention-days: 30

  performance-report:
    name: Generate Performance Report
    runs-on: ubuntu-latest
    needs: [performance-test, lighthouse-test, bundle-analysis, accessibility-test]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate comprehensive report
        run: |
          node scripts/generate-comprehensive-report.js
        env:
          CI: true

      - name: Upload comprehensive report
        uses: actions/upload-artifact@v4
        with:
          name: comprehensive-performance-report
          path: reports/
          retention-days: 90

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'reports/summary.md';
            
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## 🚀 Performance Test Results\n\n${report}`
              });
            } 